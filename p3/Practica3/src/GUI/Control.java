package GUI;

import Modelo.TheUniverse;
import com.sun.j3d.utils.universe.SimpleUniverse;

public class Control extends javax.swing.JFrame {

    private TheUniverse universe;
    /**
     * Creates new form Control
     */
    public Control(TheUniverse anUniverse) {
        initComponents();
        
        universe = anUniverse;
        // Atributos de la ventana
        setTitle("Ventana de Control");
        //setSize(400, 300);
        setLocation(820,100);
        // Se construye y se abre la ventana de visualizacion
        Visualization visualizationWindow = new Visualization(universe.getCanvas(), this, false);
        visualizationWindow.setVisible(true);
        repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonSalir = new javax.swing.JButton();
        lightsPanel = new javax.swing.JPanel();
        jcb_spotLight = new javax.swing.JCheckBox();
        axesPanel = new javax.swing.JPanel();
        jcb_showAxes = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        lightsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Lights"));

        jcb_spotLight.setText("Direccional");
        jcb_spotLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_spotLightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lightsPanelLayout = new javax.swing.GroupLayout(lightsPanel);
        lightsPanel.setLayout(lightsPanelLayout);
        lightsPanelLayout.setHorizontalGroup(
            lightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lightsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcb_spotLight)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        lightsPanelLayout.setVerticalGroup(
            lightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lightsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcb_spotLight)
                .addContainerGap())
        );

        axesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Axes"));

        jcb_showAxes.setText("Mostrar Ejes");
        jcb_showAxes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jcb_showAxesStateChanged(evt);
            }
        });
        jcb_showAxes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_showAxesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout axesPanelLayout = new javax.swing.GroupLayout(axesPanel);
        axesPanel.setLayout(axesPanelLayout);
        axesPanelLayout.setHorizontalGroup(
            axesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(axesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcb_showAxes)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        axesPanelLayout.setVerticalGroup(
            axesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(axesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcb_showAxes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(axesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lightsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(axesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lightsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(botonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        lightsPanel.getAccessibleContext().setAccessibleName("Luces");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void jcb_spotLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_spotLightActionPerformed
        // TODO add your handling code here:
        universe.setLightOnOff (TheUniverse.DIRECTIONALLIGHT, jcb_spotLight.isSelected());
    }//GEN-LAST:event_jcb_spotLightActionPerformed

    private void jcb_showAxesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_showAxesActionPerformed
        // TODO add your handling code here:
        universe.showAxes (jcb_showAxes.isSelected());
    }//GEN-LAST:event_jcb_showAxesActionPerformed

    private void jcb_showAxesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jcb_showAxesStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_showAxesStateChanged

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Control.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Control.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Control.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Control.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Control().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel axesPanel;
    private javax.swing.JButton botonSalir;
    private javax.swing.JCheckBox jcb_showAxes;
    private javax.swing.JCheckBox jcb_spotLight;
    private javax.swing.JPanel lightsPanel;
    // End of variables declaration//GEN-END:variables
}
